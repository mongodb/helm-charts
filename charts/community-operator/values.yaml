## Operator
operator:
  # Name that will be assigned to most of internal Kubernetes objects like
  # Deployment, ServiceAccount, Role etc.
  name: mongodb-kubernetes-operator

  # Name of the operator image
  operatorImageName: mongodb-kubernetes-operator

  # Name of the deployment of the operator pod
  deploymentName: mongodb-kubernetes-operator

  # Version of mongodb-kubernetes-operator
  version: 0.7.6

  # Uncomment this line to watch all namespaces
  # watchNamespace: "*"

  # Resources allocated to Operator Pod
  resources:
    limits:
      cpu: 1100m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 200Mi

  # Additional environment variables
  extraEnvs: []
  # environment:
  # - name: CLUSTER_DOMAIN
  #   value: my-cluster.domain

## Operator's database
database:
  name: mongodb-database
  # set this to the namespace where you would like
  # to deploy the MongoDB database,
  # Note if the database namespace is not same
  # as the operator namespace,
  # make sure to set "watchNamespace" to "*"
  # to ensure that the operator has the
  # permission to reconcile resources in other namespaces
  # namespace: mongodb-database

agent:
  name: mongodb-agent
  version: 12.0.10.7591-1
versionUpgradeHook:
  name: mongodb-kubernetes-operator-version-upgrade-post-start-hook
  version: 1.0.5
readinessProbe:
  name: mongodb-kubernetes-readinessprobe
  version: 1.0.11
mongodb:
  name: mongo
  repo: docker.io

registry:
  agent: quay.io/mongodb
  versionUpgradeHook: quay.io/mongodb
  readinessProbe: quay.io/mongodb
  operator: quay.io/mongodb
  pullPolicy: Always

# Set to false if CRDs have been installed already. The CRDs can be installed
# manually from the code repo: github.com/mongodb/mongodb-kubernetes-operator or
# using the `community-operator-crds` Helm chart.
community-operator-crds:
  enabled: true

# Deploys MongoDB with `resource` attributes.
createResource: false
resource:
  name: mongodb-replica-set
  version: 4.4.0
  members: 3
  tls:
    enabled: false

    # Installs Cert-Manager in this cluster.
    useCertManager: true
    certificateKeySecretRef: tls-certificate
    caCertificateSecretRef: tls-ca-key-pair
    certManager:
      certDuration: 8760h   # 365 days
      renewCertBefore: 720h   # 30 days
