{{ if .Values.operator.createOperatorServiceAccount }}
{{- $watchNamespace := include "mongodb-enterprise-operator.namespace" . | list }}
{{- if .Values.operator.watchNamespace }}
{{- $watchNamespace = regexSplit "," .Values.operator.watchNamespace -1 }}
{{- $watchNamespace = concat $watchNamespace (include "mongodb-enterprise-operator.namespace" . | list) | uniq }}
{{- end }}

{{- $roleScope := "Role" -}}
{{- if or (gt (len $watchNamespace) 1) (eq (first $watchNamespace) "*") }}
{{- $roleScope = "ClusterRole" }}
{{- end }}
---
kind: {{ $roleScope }}
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.operator.name }}
{{- if eq $roleScope "Role" }}
  namespace: {{ include "mongodb-enterprise-operator.namespace" . }}
{{- end }}
rules:
  - apiGroups:
      - ''
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - ''
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - create
      - get
      - list
      - watch
      - delete
      - update
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
      - deletecollection
  - apiGroups:
      - mongodb.com
    verbs:
      - '*'
    resources:
      - mongodb
      - mongodb/finalizers
      - mongodbusers
      - mongodbusers/finalizers
      - opsmanagers
      - opsmanagers/finalizers
      - mongodbmulticluster
      - mongodbmulticluster/finalizers
    {{- if .Values.subresourceEnabled }}
      - mongodb/status
      - mongodbusers/status
      - opsmanagers/status
      - mongodbmulticluster/status
    {{- end }}
{{- if eq $roleScope "ClusterRole" }}
  - apiGroups:
      - ''
    resources:
      - namespaces
    verbs:
      - list
      - watch
{{- end}}
{{ if .Values.operator.enablePVCResize }}
  - apiGroups:
      - ''
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - delete
      - list
      - watch
      - patch
      - update
{{- end}}
{{- range $idx, $namespace := $watchNamespace }}

{{- $namespaceBlock := "" }}
{{- if not (eq $namespace "*") }}
{{- $namespaceBlock = printf "namespace: %s" $namespace }}
{{- end }}

---
{{- if eq $namespace "*" }}
kind: ClusterRoleBinding
{{- else }}
kind: RoleBinding
{{- end }}
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $.Values.operator.name }}
  {{ $namespaceBlock }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: {{ $roleScope }}
  name: {{ $.Values.operator.name }}
subjects:
  - kind: ServiceAccount
    name: {{ $.Values.operator.name }}
    namespace: {{ include "mongodb-enterprise-operator.namespace" $ }}
{{- end }}

{{- end }}
---

{{/* This cluster role and binding is necessary to allow the operator to automatically register ValidatingWebhookConfiguration. */}}
{{- if and .Values.operator.webhook.registerConfiguration .Values.operator.webhook.installClusterRole }}
{{- if not (lookup "rbac.authorization.k8s.io/v1" "ClusterRole" "" "mongodb-enterprise-operator-mongodb-webhook") }}
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mongodb-enterprise-operator-mongodb-webhook
rules:
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - validatingwebhookconfigurations
    verbs:
      - get
      - create
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
{{- end }}
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.operator.name }}-{{ include "mongodb-enterprise-operator.namespace" . }}-webhook-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mongodb-enterprise-operator-mongodb-webhook
subjects:
  - kind: ServiceAccount
    name: {{ .Values.operator.name }}
    namespace: {{ include "mongodb-enterprise-operator.namespace" . }}

{{- end }}

{{- $clusterRoleName := printf "%s-cluster-telemetry" .Values.operator.name }}
{{- $telemetry := default dict .Values.operator.telemetry }}

{{/* We can't use default here, as 0, false and nil as determined as unset and thus set the default value */}}
{{- if ne $telemetry.enabled false }}
  {{- if ne $telemetry.installClusterRole false}}

---
# Additional ClusterRole for clusterVersionDetection
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $clusterRoleName }}
rules:
  # Non-resource URL permissions
  - nonResourceURLs:
      - "/version"
    verbs:
      - get
  # Cluster-scoped resource permissions
  - apiGroups:
      - ''
    resources:
      - namespaces
    resourceNames:
      - kube-system
    verbs:
      - get
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - list
{{- end}}
---
# ClusterRoleBinding for clusterVersionDetection
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Values.operator.name }}-{{ include "mongodb-enterprise-operator.namespace" . }}-cluster-telemetry-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ $clusterRoleName }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.operator.name }}
    namespace: {{ include "mongodb-enterprise-operator.namespace" . }}
{{- end }}
